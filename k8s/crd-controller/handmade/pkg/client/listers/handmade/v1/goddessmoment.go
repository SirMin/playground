// this is handmade crd & controller

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/trainyao/playground/k8s/crd-controller/handmade/pkg/apis/handmade/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// GoddessMomentLister helps list GoddessMoments.
// All objects returned here must be treated as read-only.
type GoddessMomentLister interface {
	// List lists all GoddessMoments in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.GoddessMoment, err error)
	// GoddessMoments returns an object that can list and get GoddessMoments.
	GoddessMoments(namespace string) GoddessMomentNamespaceLister
	GoddessMomentListerExpansion
}

// goddessMomentLister implements the GoddessMomentLister interface.
type goddessMomentLister struct {
	indexer cache.Indexer
}

// NewGoddessMomentLister returns a new GoddessMomentLister.
func NewGoddessMomentLister(indexer cache.Indexer) GoddessMomentLister {
	return &goddessMomentLister{indexer: indexer}
}

// List lists all GoddessMoments in the indexer.
func (s *goddessMomentLister) List(selector labels.Selector) (ret []*v1.GoddessMoment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.GoddessMoment))
	})
	return ret, err
}

// GoddessMoments returns an object that can list and get GoddessMoments.
func (s *goddessMomentLister) GoddessMoments(namespace string) GoddessMomentNamespaceLister {
	return goddessMomentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GoddessMomentNamespaceLister helps list and get GoddessMoments.
// All objects returned here must be treated as read-only.
type GoddessMomentNamespaceLister interface {
	// List lists all GoddessMoments in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.GoddessMoment, err error)
	// Get retrieves the GoddessMoment from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.GoddessMoment, error)
	GoddessMomentNamespaceListerExpansion
}

// goddessMomentNamespaceLister implements the GoddessMomentNamespaceLister
// interface.
type goddessMomentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all GoddessMoments in the indexer for a given namespace.
func (s goddessMomentNamespaceLister) List(selector labels.Selector) (ret []*v1.GoddessMoment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.GoddessMoment))
	})
	return ret, err
}

// Get retrieves the GoddessMoment from the indexer for a given namespace and name.
func (s goddessMomentNamespaceLister) Get(name string) (*v1.GoddessMoment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("goddessmoment"), name)
	}
	return obj.(*v1.GoddessMoment), nil
}
